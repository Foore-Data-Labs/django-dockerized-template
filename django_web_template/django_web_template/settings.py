"""
Django settings for django_web_template project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import datetime
import os
from kombu import Queue, Exchange
import dj_database_url

from decouple import config


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

CONST_DEPLOYMENTTYPE_PRODUCTION = 'DEPLOYMENTTYPE_PRODUCTION'
CONST_DEPLOYMENTTYPE_PREPROD = 'DEPLOYMENTTYPE_PREPROD'

DEPLOYMENTTYPE = config('DEPLOYMENTTYPE')
IS_PREPROD = (DEPLOYMENTTYPE == CONST_DEPLOYMENTTYPE_PREPROD)
IS_PROD = (DEPLOYMENTTYPE == CONST_DEPLOYMENTTYPE_PRODUCTION)


# TBD: See - https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

SECRET_KEY = config('SECRET_KEY')
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = ['localhost', '127.0.0.1',
                 'www.api.your-org.com', 'api.your-org.com']
if IS_PREPROD:
    ALLOWED_HOSTS += ['www.api.test.your-org.com', 'api.test.your-org.com']

if IS_PREPROD or IS_PROD:
    SECURE_SSL_REDIRECT = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

####################################################
# https://pypi.org/project/django-cors-headers/
# Below - Allow all shall be false and it should pick from whitelist. Today that is not working
# need to look at.
CORS_ORIGIN_ALLOW_ALL = True

# TBD: Find out the right values for Mobile App
# CORS_ORIGIN_WHITELIST = [
#    "https://www.your-org.com",
#    "https://your-org.com",
# ]
# if IS_PREPROD:
#    CORS_ORIGIN_WHITELIST += [
#        'https://www.test.your-org.com',
#        'https://test.your-org.com',
#        "https://127.0.0.1",
#        "https://localhost"]


CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'POST',
    'PATCH',
    'PUT',
)

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)

####################################################
# NOTIFICATION

SMS_TO_CONSOLE = config('SMS_TO_CONSOLE', default=True, cast=bool)
EMAIL_TO_CONSOLE = config('EMAIL_TO_CONSOLE', default=True, cast=bool)
FCM_TO_CONSOLE = config('FCM_TO_CONSOLE', default=True, cast=bool)

# Notification Keys (Push/SMS/Email)

NOTIF_MOBILE_FCM_SERVER_KEY = config('NOTIF_MOBILE_FCM_SERVER_KEY')
NOTIF_MOBILE_ONE_DEVICE_PER_USER = False
NOTIF_MOBILE_DELETE_INACTIVE_DEVICES = True

MSG91_AUTH_KEY = config('MSG91_AUTH_KEY')
SENDGRID_API_KEY = config('SENDGRID_API_KEY')
####################################################
# Application definition

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_PARTY_APPS = [
    'rest_framework',
    'corsheaders',

    # Schedule tasks using backend
    # https://github.com/celery/django-celery-beat
    # https://docs.celeryproject.org/en/latest/userguide/periodic-tasks.html#using-custom-scheduler-classes
    'django_celery_beat',

]

PROJECT_APPS = [
    'account.apps.AccountConfig',
    'jwt_auth.apps.JwtAuthConfig',
    'notif_mobile.apps.NotifMobileConfig',
    'notif_sms.apps.NotifSmsConfig',
    'notif_email.apps.NotifEmailConfig',
]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + PROJECT_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Cors # TODO: Read more.
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_web_template.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_web_template.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASE_URL = config('DATABASE_URL')
DATABASES = {}
DEFAULT_DB_CONFIG = dj_database_url.parse(
    DATABASE_URL, conn_max_age=600, ssl_require=not DEBUG)

DATABASES['default'] = DEFAULT_DB_CONFIG
DEFAULT_DB_CONFIG['TEST'] = {'NAME': config('TEST_DB_NAME')}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'account.PlatformUser'

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


####################################################################################################
#################################################CELERY#############################################
####################################################################################################

CELERY_QUEUES = (
    Queue('default', Exchange('default'), routing_key='default'),  # Fast
    Queue('sms_report', Exchange('sms_report'),
          routing_key='sms_report'),  # Fast
    Queue('send_sms', Exchange('send_sms'), routing_key='send_sms'),  # Slow
    Queue('email_queue', Exchange('email_queue'),
          routing_key='email_queue'),  # Slow
    Queue('fcm_notification', Exchange('fcm_notification'),
          routing_key='fcm_notification'),  # Slow
)


CELERY_DEFAULT_QUEUE = 'default'
CELERY_DEFAULT_EXCHANGE = 'default'
CELERY_DEFAULT_ROUTING_KEY = 'default'

CELERY_BROKER_URL = config('REDIS_URL')
# Enable this, along with celerybackend in 3rd party apps if required
CELERY_IGNORE_RESULT = True
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE
CELERYD_TASK_SOFT_TIME_LIMIT = 60

if IS_PREPROD:
    CELERY_REDIS_MAX_CONNECTIONS = 30
    BROKER_POOL_LIMIT = 15
else:
    CELERY_REDIS_MAX_CONNECTIONS = 50
    BROKER_POOL_LIMIT = 20


BROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 86400}  # 1 day
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'


####################################################################################################

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'


REST_FRAMEWORK = {
    'PAGE_SIZE': 20,
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'jwt_auth.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',  # TODO: Remove in prod
    )
}

JWT_AUTH = {
    'JWT_ALLOW_REFRESH': True,
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=90),
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=180),
    'JWT_INITIAL_EXPIRATION_DELTA': datetime.timedelta(hours=2),
}

#######################################################################################

# Email
# https://docs.djangoproject.com/en/3.0/topics/email/#console-backend
# For Testing only
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
#######################################################################################
